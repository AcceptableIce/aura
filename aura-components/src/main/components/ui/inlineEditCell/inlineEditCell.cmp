<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component implements="ui:hasGridEvents">
	<aura:attribute name="class" type="String" default="" description="A CSS style to be attached to the cell. This style is added in addition to base styles output by the component."/>
	<aura:attribute name="name" type="String"/>
	<aura:attribute name="triggerLabel" type="String" default="Edit cell"/>
    <aura:attribute name="edited" type="Boolean" default="false"/>
	<aura:attribute name="isPsuedoInput" type="Boolean" default="false"/>
    
    <aura:attribute name="valueAttribute" type="String" default="value" description="The name of the attribute on the body component that holds the value to be edited."/>

	<aura:attribute name="triggerIcon" type="Aura.Component[]" default="" description="Icon used for the trigger."/>
	
	<!-- Cell states -->
	<aura:attribute name="disabled"  type="Boolean" default="false"/>
	<aura:attribute name="hasErrors" type="Boolean" default="false"/>

	<!-- Potentially move psuedo input version into separate component -->
	<span class="{! 'slds-grid slds-grid--align-spread slds-cell-edit cellContainer ' + v.class + (v.edited ? ' slds-is-edited' : '') + (v.hasErrors ? ' slds-has-error' : '')}">
		<aura:renderIf isTrue="{!!v.isPsuedoInput}">
			{!v.body}
		</aura:renderIf>
		<span class="triggerContainer">
			<ui:button aura:id="editTrigger" class="{! 'slds-button slds-button--icon slds-cell-edit__button slds-m-left--x-small trigger' + (v.disabled ? ' disabled' : '')}" press="{!c.trigger}" disabled="{!v.disabled}"
                        label="{!v.triggerLabel}" buttonTitle="{!v.triggerLabel}" labelDisplay="false">
				<aura:renderIf isTrue="{!v.isPsuedoInput}">
					<span aura:id="contentSpan" class="content">{!v.body}</span>
				</aura:renderIf>
				
				{!v.triggerIcon}

			</ui:button>
		</span>
	</span>
</aura:component>
