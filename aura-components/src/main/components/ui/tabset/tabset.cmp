<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" implements="ui:visible" support="GA" description="A tab set that displays a list of tabs in an unordered list.">
    <aura:attribute name="tabPosition" type="String" default="top" description="The position in which the tab bar should be displayed. Possible values are &quot;left&quot;, &quot;top&quot;, &quot;right&quot;, and &quot;bottom&quot;. Default value is &quot;left&quot;." />
    <aura:attribute name="tabs" type="List" description="The collection of objects to construct tabs. Please refer to ui:tab attributes." />
    <aura:attribute name="tabItems" access="private" type="List" description="Use internally for passing a list of tab items to ui:tabBar component." />
    <aura:attribute name="class" type="String" description="A CSS style to be attached to the component. This style is added in addition to base styles output by the component." />
    <aura:attribute name="lazyRenderTabs" type="Boolean" default="false" description="If true, contained ui:tab components are rendered only when they are activated." />
    
    <aura:registerevent name="addTab" type="ui:tabsetEvent" description="Add new tab to the component." />
    <aura:registerevent name="removeTab" type="ui:tabsetEvent" description="Remove a tab from the component." />
    <aura:registerevent name="setActiveTab" type="ui:tabsetEvent" description="Activate or deactivate a tab." />
    <aura:registerevent name="getActiveTab" type="ui:tabsetEvent" description="Get the currently active tab." />

    <aura:handler name="init" value="{!this}" action="{!c.onInit}" />
    <aura:handler name="addTab" action="{!c.addTab}" />
    <aura:handler name="removeTab" action="{!c.removeTab}" />
    <aura:handler name="setActiveTab" action="{!c.setActiveTab}" />
    <aura:handler name="getActiveTab" action="{!c.getActiveTab}" />

    <div class="{!v.class + ' ' + v.tabPosition}" aura:id="tabContainer">
        <aura:if isTrue="{!v.lazyRenderTabs == false &amp;&amp; (v.tabPosition == 'bottom' || v.tabPosition == 'right')}">
            {!v.body}
        </aura:if>
            
        <ui:tabBar aura:id="tabBar" tabs="{!v.tabItems}" 
           class="{!v.tabPosition + ' tabBar'}"
           onTabActivated="{!c.onTabActivated}"
           onTabClosed="{!c.onTabClosed}" 
        />
           
        <aura:if isTrue="{!v.lazyRenderTabs == false &amp;&amp; (v.tabPosition == 'top' || v.tabPosition == 'left')}">
            {!v.body}
        </aura:if>
          
    </div>
</aura:component>
