<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component implements="ui:scrollerEmbeddable"
                extensible="true"
                description="">

    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    
    <aura:attribute name="height"               type="Integer"                                    description="Height of the carousel"/>
    <aura:attribute name="width"                type="Integer"                                    description="Width of the carousel"/>
    <aura:attribute name="pageModels"           type="Object[]"                                   description="Array of metadata component definitions to load"/>
    <aura:attribute name="pageComponents"       type="Aura.Component[]"                           description="Array of Components to inject"/>
    <aura:attribute name="prefetchedTab"        type="Aura.Component[]"                           description="If prefetchFirstTab is enabled, the provider will set the component in this parameter" />
    <aura:attribute name="isDotIndicator"       type="Boolean"          default="false"           description="Set true to use a dot indicator rather than text"/>
    <aura:attribute name="initialPage"          type="String"           default="0"               description="Initial page to display. Can be overriden by the pageModels metadata" />
    <aura:attribute name="prefetchFirstTab"     type="Boolean"          default="false"           description="If pageModels defined, makes the provider fetch the first page within the same request" />
    <aura:attribute name="lazyLoadTabs"         type="Boolean"          default="true"            description="Load the remaining tabs as soon as possible. If set to false it will load them once you swipe" />
    <aura:attribute name="indicatorStateClass"  type="String"           default="indicator-state" description="Class name to identify the location for the indicator bar"/>
    <aura:attribute name="pageScrollerPlugins"  type="String"           default=""                description="Additional plugins to be included in each carousel page" />
    <aura:attribute name="justifyContent"       type="String"           default="stretch"         description="Which horizontal justification to use for the page indicators. values: 'stretch' | 'leftGrowRight'"/>
    <aura:attribute name="prefetchedTabIndex"   type="Integer"                                    description="If prefetchFirstTab is enabled, the provider will set this to the index of the prefetched tab" />
    <aura:attribute name="suppressIndicators"   type="String"           default="false"           description="If true, will cause no indicator to render." />
    <aura:attribute name="isScrollable"         type="Boolean"          default="true"            description="If true, will cause the individual pages to scroll" />
    <aura:attribute name="bindEventsToScroller" type="Boolean"          default="true" />
    
    <aura:attribute name="pageIndicatorComponent" type="Aura.Component[]" description="Component to display the tabBar. Needs to implement carouselIndicator interface">
        <ui:carouselIndicator/>
    </aura:attribute>

    <aura:attribute name="carouselPageComponent" type="Aura.ComponentDefRef[]" description="Definition of the component to hold the content of each page. Needs to implement carouselPage interface">
        <ui:carouselPage/>
    </aura:attribute>
    
    <div data-id="{!globalId}" 
    	 class="{! (v.suppressIndicators ? 'indicator-supressed ' : '') + 'carousel flex'}" 
    	 style="{!(v.width ? ('width: ' + v.width + 'px;') : '') + (v.height ? ('height: ' + v.height + 'px') : '')}">
    	 
        <!-- Indicator -->
        {!v.pageIndicatorComponent}

        <!-- Carousel body -->
        <ui:scroller 
            aura:id="carousel" 
            class="carousel-body"
            bindEventsToScroller="{!v.bindEventsToScroller}"
            scroll="horizontal"
            enabled="{! (v.pageModels.length > 1 || v.pageComponents.length > 1)}"
            snap="true"
            lockOnDirection="vertical"
            plugins="Indicators,Carousel"
            snapType="sticky"> 
                {!v.body}
        </ui:scroller>            
    </div>
</aura:component>
