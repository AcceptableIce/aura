<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component  extends="ui:interactive"  extensible="true" 
	 description="A tabset component that enables swiping through groups of related content types in addition to standard keyboard, touch, and mouse interactions.">

		<aura:attribute name="title" type="String" description="Title of the carousel" />
		<aura:attribute name="width" type="Integer" description="Width of the carousel in pixels" />
		<aura:attribute name="height" type="Integer" description="Height of the carousel in pixels" />
		
		<aura:attribute name="pageIndicatorPosition" type="String" default="top" description="Position of the page indicator. Acceptable values are 'top' and 'bottom'. " />
		<aura:attribute name="continuousFlow" type="Boolean" default="false" description="Determines whether to flow continuously between pages or not." />		
		<aura:attribute name="defaultPage" type="Integer" description="Default page to display. Setting this will override the 'isDefault' attribute in the ui:carouselPage component." />
		
		<aura:attribute name="pageModels" type="Object[]" description="The model used to create a carousel page." />
		<aura:attribute name="pageComponents" type="Aura.Component[]" description="Carousel page components that is rendered as carousel pages." />
		

		<aura:attribute name="priv_currentPage" type="Integer" description="PRIVATE - the currently selected page index." />
		<aura:attribute name="priv_carouselStyle" type="String" description="PRIVATE - inline style of the carousel container." />
		<aura:attribute name="priv_scrollerWidth" type="String" description="PRIVATE - the scroller width in pixels." />
		<aura:attribute name="priv_snap" type="String" description="PRIVATE - Scroller snap option."/>
		
		<aura:attribute name="priv_scrollContentClass" type="String" description="PRIVATE - Scroller content css class." />
								
		<aura:registerevent name="selectDefaultPage" type="ui:carouselPageEvent" description="The event fired when the default page is selected."/>
    	<aura:registerevent name="pageSelected" type="ui:carouselPageEvent" description="The event fired when the page is selected."/>
    	<aura:registerevent name="loadPage" type="ui:carouselPageEvent" description="The event fired when the page is loaded." />    	
		<aura:registerevent name="scrollEnd" type="ui:scrollEnd" description="The event fired when the end of the scroller is reached." />
		
    	<aura:handler name="selectDefaultPage" action="{!c.selectDefaultPage}" />
    	<aura:handler name="pageSelected" action="{!c.pageSelected}" />    
		<aura:handler name="init" value="{!this}" action="{!c.onInit}" />
						
		<ui:resizeObserver onresize="{!c.refresh}"/>
						
		<aura:attribute name="indicators" type="Aura.Component[]">						 
			<nav aura:id="navContainer" class="{!'carousel-nav-container carousel-nav-position-' + v.pageIndicatorPosition}" role="tablist">        		 
        			<ui:carouselPageIndicator aura:id="pageIndicator" />        		 
			</nav>
		</aura:attribute>		
				
		<article class="{!v.class}" style="{!v.priv_carouselStyle}" role="article">
		 
				<h2 class="visually-hidden">{!v.title}</h2>
				
				<aura:if isTrue="{!v.continuousFlow != true &amp;&amp; v.pageIndicatorPosition == 'top'}" >
					{!v.indicators}
				</aura:if>			
								   	        
		    	<div aura:id="carousel-pages" class="carousel-pages">
			    	<ui:scroller aura:id="scroller"			    		 
			    		stopEventPropagation="true"
			    		width="{!v.priv_scrollerWidth}"
			    	 	class="scroll-container"			    	 	
			    	   	hScroll="true"
			    	   	vScroll="false"
			    	   	onScrollMove="{!c.onScrollMove}"
			    	   	onScrollEnd="{!c.onScrollEnd}"
			    	   	refreshed="{!c.onScrollerRefreshed}"
			    	   	snap="{!v.priv_snap}"
			    	   	scrollContentClass="{!v.priv_scrollContentClass}" >	    				    		    		 
						 								 
						<div aura:id="pageContainer" class="page-container"> 					 						 							
						 	<!--page content will be rendered here-->
						</div>
					</ui:scroller>
				</div>
				
				<aura:if isTrue="{!v.continuousFlow != true &amp;&amp; v.pageIndicatorPosition == 'bottom'}" >
					{!v.indicators}
				</aura:if>					          
		</article>		
				 
</aura:component>

