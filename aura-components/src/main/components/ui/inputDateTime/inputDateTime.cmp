<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component access="GLOBAL" support="GA" extends="ui:input" implements="ui:inputDateTimeComponent" extensible="true" defaultFlavor="default, input"
    controller="java://org.auraframework.impl.controller.TimeZoneInfoController"
    description="An input field for entering a date and time.">
    <aura:attribute name="value" type="String" access="GLOBAL" description="The input value of the date/time."/>
    <aura:attribute name="placeholder" type="String" description="The text that is displayed for date input by default. Set during init based on the 'format' value."/>
    <aura:attribute name="timePlaceholder" type="String" description="The text that is displayed for time input by default. Set during init based on the 'format' value."/>

    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    <aura:registerEvent name="openPicker" type="ui:openPicker"/>
    <aura:handler name="openPicker" action="{!c.openDatePicker}"/>

    <aura:if isTrue="{!$Browser.isPhone || $Browser.isTablet}">
        <input aura:id="inputDate" id="{!v.domId}" class="{!v.class + 'input'}" type="text" placeholder="{!v.placeholder}" readonly="true" onclick="{!c.click}" aria-describedby="{!v.ariaDescribedBy}" disabled="{!v.disabled}"/>
        <aura:if isTrue="{!and(v.displayDatePicker, !v.disabled)}">
            <a aura:id="datePickerOpener" class="datePicker-openIcon display" aria-haspopup="true" onclick="{!c.openDatePicker}">
                <span class="assistiveText">Date Picker</span>
            </a>
        </aura:if>

        <a aura:id="clear" class="clearIcon hide" onclick="{!c.clearValue}">
            <span class="assistiveText">Clear Button</span>
        </a>
        <ui:datePicker aura:id="datePicker" selectDate="{!c.setValue}"/>
    </aura:if>

    <aura:if isTrue="{!$Browser.formFactor == 'DESKTOP'}">
        <form class="form--stacked">
            <div class="dateTime-inputDate form-element form-element__control">
                <input aura:id="inputDate" id="{!v.domId}" class="{!v.class + 'input'}" type="text" placeholder="{!v.placeholder}" aria-describedby="{!v.ariaDescribedBy}" disabled="{!v.disabled}"/>
                <aura:if isTrue="{!and(v.displayDatePicker, !v.disabled)}">
                    <a aura:id="datePickerOpener" class="datePicker-openIcon display" aria-haspopup="true" onclick="{!c.openDatePicker}">
                        <span class="assistiveText">Date Picker</span>
                    </a>
                </aura:if>
            </div>
            <ui:datePicker aura:id="datePicker" selectDate="{!c.setValue}"/>
            <div class="dateTime-inputTime form-element form-element__control">
                <div class="input-has-icon input-has-icon--right">
                    <label for="{!v.domId+'-time'}"/>
                    <input aura:id="inputTime" id="{!v.domId+'-time'}" class="{!v.class + 'input'}" type="text" placeholder="{!v.timePlaceholder}" aria-describedby="{!v.ariaDescribedBy}" disabled="{!v.disabled}"/>
                    <a aura:id="timePickerOpener" class="timePicker-openIcon display" aria-haspopup="true" onclick="{!c.openTimePicker}">
                        <span class="assistiveText">Time Picker</span>
                    </a>
                </div>
            </div>
            <ui:inputTimePicker aura:id="timePicker" selectDate="{!c.setValue}" timeFormat="{!v.timeFormat}"/>
        </form>
    </aura:if>
</aura:component>