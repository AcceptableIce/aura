<!--

    Copyright (C) 2012 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" support="GA" description="A dialog window used for overlays or modals. To use this component, you must also include one (and only one) ui:dialogManager component in your app. Regardless of how many instances of ui:dialog you use, only one ui:dialogManager component is required. We recommend putting the ui:dialogManager component at the end of your .app file.">

    <!-- public attributes -->
    <aura:attribute name="autoFocus" type="Boolean" default="{!true}" description="Automatically focus on the first focusable element when the dialog is displayed."/>
    <aura:attribute name="buttons" type="Aura.Component[]" description="Buttons that should be displayed at the bottom of the dialog (e.g., 'Save', 'Cancel', etc.). If the dialog type is set to 'alert' and you are using the default 'cancel' and 'confirm' buttons, any custom buttons you provide here will be placed between the 'cancel' and 'confirm' buttons."/>
    <!-- clickOutToClose isn't working right now, because ui:press finishes firing AFTER ui:openDialog -->
    <!--<aura:attribute name="clickOutToClose" type="Boolean" default="{!true}" description="Specifies if the dialog should be closed when any element outside the dialog is clicked."/>-->
    <aura:attribute name="cancelButtonClass" type="String" description="Additional CSS classes to apply to the default cancel button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="cancelButtonLabel" type="String" default="Cancel" description="The label of the default cancel button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="cancelButtonTitle" type="String" default="Click to cancel" description="The title attribute of the default cancel button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="closeButtonClass" type="String" description="Additional CSS classes to apply to the dialog close button, located in the upper right corner of the dialog window."/>
    <aura:attribute name="closeButtonLabel" type="String" default="X" description="The label of the dialog close button, located in the upper right corner of the dialog window."/>
    <aura:attribute name="closeButtonTitle" type="String" default="Close this window" description="The title attribute of the dialog close button, located in the upper right corner of the dialog window."/>
    <aura:attribute name="confirmCheckboxClass" type="String" description="Additional CSS classes to apply to the double-confirmation checkbox."/>
    <aura:attribute name="confirmCheckboxLabelClass" type="String" description="Additional CSS classes to apply to the label of the double-confirmation checkbox."/>
    <aura:attribute name="confirmButtonClass" type="String" description="Additional CSS classes to apply to the default confirm button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="confirmButtonLabel" type="String" default="OK" description="The label of the default confirm button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="confirmButtonTitle" type="String" default="Click to confirm" description="The title attribute of the default confirm button that is displayed when the 'type' attribute is set to 'alert'."/>
    <aura:attribute name="defaultAlertButtons" type="String" default="both" description="When the 'type' attribute is set to 'alert', determines which default buttons should appear at the bottom of the dialog. Valid values are 'confim', 'cancel', 'both', or 'none'."/>
    <aura:attribute name="dialogClass" type="String" description="Additional CSS classes to apply to the dialog's outermost &lt;div&gt; wrapper."/>
    <aura:attribute name="doubleConfirm" type="Boolean" default="{!false}" description="When the 'type' attribute is set to 'alert' and the 'defaultAlertButtons' attribute is set to 'confirm' or 'both', this setting will display a confirmation checkbox in addition to the confirmation button. The checkbox must be checked in order for the confirmation button to return true upon click."/>
    <aura:attribute name="doubleConfirmLabel" type="String" default="Are you sure?" description="The default label of the double-confirmation checkbox."/>
    <aura:attribute name="maskClass" type="String" description="Additional CSS classes to apply to the window mask located behind a modal dialog."/>
    <aura:attribute name="width" type="String" default="medium" description="The width of the dialog. Valid values are 'small', 'medium', 'large' (which equal 310px, 620px, and 940px, respectively), and 'auto', which sizes based on the contents of the dialog. Note that 'auto' will only work properly when the dialog type is set to 'nonmodal'."/>
    <aura:attribute name="title" type="String" description="The title displayed in the dialog's header. Required for accessibility." required="true"/>
    <aura:attribute name="titleDescription" type="String" description="Instructional information about the purpose of the dialog. This text will not be visible on-screen, but still readable by assistive technologies." required="true"/>
    <aura:attribute name="type" type="String" description="The type of dialog window. Possible choices are 'alert', 'modal', and 'nonmodal'. TODO: explain the difference between these." required="true"/>

    <!-- private attributes -->
    <aura:attribute name="_ariaId" type="String" description="PRIVATE ATTRIBUTE - DO NOT SET MANUALLY. The id needed to identify the dialog window to assistive technologies."/>
    <aura:attribute name="_handlerConfig" type="Object" description="PRIVATE ATTRIBUTE - DO NOT SET MANUALLY. The map of event handlers that should be applied after rendering (keyup, click, blur, resize)."/>
    <aura:attribute name="_isVisible" type="Boolean" default="{!false}" description="PRIVATE ATTRIBUTE - DO NOT SET MANUALLY. Specifies if the dialog is displayed. To control visibility of the dialog, fire either the ui:openDialog or ui:closeDialog event."/>

    <!-- events -->
    <aura:registerEvent name="close" type="ui:closeDialog" description="Event fired when the dialog window requests to close itself."/>
    <aura:handler event="ui:dialogManagerReady" action="{!c.registerDialog}"/>

    <!-- modal background -->
    <aura:if isTrue="{!v.type == 'alert' || v.type == 'modal'}">
        <div aura:id="mask" class="{!'mask hidden ' + v.maskClass}"></div>
    </aura:if>

    <!-- dialog container -->
    <div aura:id="dialog" class="{!'dialog hidden ' + v.dialogClass + (v.type == 'alert' || v.type == 'modal' ? ' modal ' : ' ') + v.width}" role="{!v.type == 'alert' ? 'alertdialog' : 'dialog'}" aria-live="assertive" aria-atmoic="true" aria-labelledby="{!v._ariaId}">

        <!-- header -->
        <h2 aura:id="title" id="{!v._ariaId}" class="title">{!v.title}<span class="assistiveText"> {!v.titleDescription}</span></h2>

        <!-- content -->
        <div aura:id="content" class="content">
            {!v.body}
            <aura:if isTrue="{!v.type == 'alert' &amp;&amp; v.doubleConfirm &amp;&amp; (v.defaultAlertButtons == 'confirm' || v.defaultAlertButtons == 'both')}">
                <div class="confirmWrapper">
                    <ui:block class="confirm">
                        <aura:set attribute="left">
                            <ui:inputCheckbox aura:id="confirmBox" class="{!v.confirmCheckboxClass}" click="{!c.setConfirmButtonState}"/>
                        </aura:set>
                        <aura:set attribute="body">
                            <label aura:id="confirmBoxLabel" class="{!'confirmBoxLabel ' + v.confirmCheckboxLabelClass}">{!v.doubleConfirmLabel}</label>
                        </aura:set>
                    </ui:block>
                </div>
            </aura:if>
        </div>

        <!-- buttons -->
        <aura:if isTrue="{!v.buttons.length > 0 || (v.type == 'alert' &amp;&amp; v.defaultAlertButtons != 'none')}">
            <div class="buttons">
                <aura:if isTrue="{!v.type == 'alert' &amp;&amp; (v.defaultAlertButtons == 'cancel' || v.defaultAlertButtons == 'both')}">
                    <ui:button aura:id="cancelButton" class="{!v.cancelButtonClass}" label="{!v.cancelButtonLabel}" buttonTitle="{!v.cancelButtonTitle}" press="{!c.cancel}"/>
                </aura:if>
                <!-- custom buttons go between 'cancel' and 'confirm', because 'cancel' buttons should always be on the far left
                     and 'confirm' buttons should always be on the far right. any other custom action should be in the middle. -->
                {!v.buttons}
                <aura:if isTrue="{!v.type == 'alert' &amp;&amp; (v.defaultAlertButtons == 'confirm' || v.defaultAlertButtons == 'both')}">
                    <ui:button aura:id="confirmButton" class="{!v.confirmButtonClass}" label="{!v.confirmButtonLabel}" buttonTitle="{!v.confirmButtonTitle}" disabled="{!v.doubleConfirm}" press="{!c.confirm}"/>
                </aura:if>
            </div>
        </aura:if>

        <!-- close ("x") link - this DOM placement is intentional. DO NOT move, hide, or remove this element. see dialogManagerHelper.getFocusElement() for more info -->
        <ui:button aura:id="close" class="{!'close ' + v.closeButtonClass}" label="{!v.closeButtonLabel}" buttonTitle="{!v.closeButtonTitle}" press="{!c.cancel}"/>

    </div>

</aura:component>
