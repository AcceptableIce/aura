<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" abstract="true" implements="ui:visible, ui:uiEvents"
    description="An abstract class that is extended by input components such as ui:inputCheckbox and ui:inputText." support="GA">
    
    <!-- Library which holds the Aura events registration -->
    <aura:import library="ui:eventLib" property="lib"/>
    
    <aura:dependency resource="markup://ui:inputDefaultError" type="COMPONENT"/>
    
    <aura:attribute name="required" type="Boolean" access="GLOBAL" default="false" description="Specifies whether the input is required. Default value is &quot;false&quot;."/>
    <aura:attribute name="updateOn" type="String" access="GLOBAL" default="change" description="Updates the component's value binding if the updateOn attribute is set to the handled event. Default value is &quot;change&quot;."/>
    <aura:attribute name="value" type="String" access="GLOBAL" description="The value currently in the input field."/>
    <aura:attribute name="type" type="String" description="Specifies the input type. Possible values: button, checkbox, file, hidden, image, password, radio, reset, submit, text, textarea. Corresponds to the type attribute of the rendered HTML input element. Override type in a component that extends this component to set it to a different HTML input type."/>
    <aura:attribute name="errorComponent" type="Aura.Component[]" description="A component that displays any error messages, such as validation errors, associated with the input field."/>
	<aura:attribute name="label" type="String" access="GLOBAL" description="The text of the label component" />
	<aura:attribute name="labelClass" access="GLOBAL" type="String" default="" description="The CSS class of the label component" />
	<aura:attribute name="requiredIndicatorClass" type="String" access="GLOBAL" default="" description="The CSS class of the required indicator component" />
	<aura:attribute name="labelPosition" type="String" default="left" description="The position in which the label should be displayed. Possible values are &quot;left&quot;, &quot;top&quot;, &quot;right&quot;, &quot;bottom&quot;, and &quot;hidden&quot;. Default value is &quot;left&quot;." />
	<aura:attribute name="disabled" type="Boolean" access="GLOBAL" default="false" description="Specifies whether the component should be displayed in a disabled state. Default value is &quot;false&quot;."/>
    <aura:attribute name="disableDoubleClicks" type="Boolean" default="false" description="Disables double clicking the component within 350ms"/>
	<aura:attribute name="labelTitle" type="String" description="The text displayed in a tooltip when the mouse pointer hovers over the button."/>
    <aura:registerEvent name="change" type="ui:change" access="GLOBAL" description="The event fired when the user changes the content of the input."/>
    <aura:registerEvent name="input" type="ui:inputEvent" description="The event fired when the user enters an input."/>
    <aura:registerEvent name="copy" type="ui:copy" access="GLOBAL" description="The event fired when the user copies content to the clipboard."/>
    <aura:registerEvent name="cut" type="ui:cut" access="GLOBAL" description="The event fired when the user cuts content to the clipboard."/>
    <aura:registerEvent name="paste" type="ui:paste" access="GLOBAL" description="The event fired when the user pastes content from the clipboard."/>

    <aura:registerEvent access="GLOBAL" name="onError" type="ui:validationError" description="The event fired when there are any validation errors on the component."/>
    <aura:registerEvent access="GLOBAL" name="onClearErrors" type="ui:clearErrors" description="The event fired when any validation errors should be cleared."/>

    <aura:registerEvent name="updateError" type="ui:updateError" description="The event fired to trigger the default error component and messages."/>
    <aura:handler name="updateError" action="{!c.updateDefaultError}"/>
    <aura:handler name="init" value="{!this}" action="{!c.init}" />	
    <aura:attribute name="domId" type="String" description="DOM id of the input element. By default, this attribute resolved to the globalId of the component to avoid id collision." />

    <aura:attribute name="requiredIndicator" type="aura://Aura.Component[]" description="A component that displays the indicator for the required field.">    	 
		<span class="{!'required ' + v.requiredIndicatorClass}">*</span>    	 
    </aura:attribute>    
    {!v.body}{!v.errorComponent}

</aura:component>
