<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" implements="ui:hasContextComponent" support="PROTO" description="A draggable component in drag and drop operation.">
	
	<aura:import library="ui:dragAndDropLib" property="lib" />
	
	<aura:attribute name="type" type="String" default="move" description="Operation type: can be either copy, link, or move."/>
	<aura:attribute name="dataTransfer" type="Map" description="A Map&lt;String, String&gt; of data to be transferred during drag and drop operation. The key could be MIME type or some custom type."/>
	
	<aura:attribute name="class" type="String" default="" description="Additional CSS style to be attached to this component."/>
	<aura:attribute name="dragClass" type="String" default="" description="Additional CSS style to be attached to this component while it's being dragged."/>
	<aura:attribute name="dragAccessibilityClass" type="String" default="" description="Additional CSS style to be attached to this component while it's being dragged in accessibility mode. It's defaulted to dragClass attribute if it's unspecified."/>
	<aura:attribute name="dragImageClass" type="String" default="" description="Additional CSS style to be attached to drag image. Note that different browsers will render differently."/>
	
	<aura:attribute name="disable" type="Boolean" default="false" description="Set to true to disable draggable or false otherwise."/>
	<aura:attribute name="ariaGrabbed" type="boolean" default="false" access="private" description="Indicate a draggable component."/>
	<aura:attribute name="accessibilityComponent" type="String" description="Accessibility component's global Id for this draggable component. Must be of type ui:dragAndDropAccessibility."/>
	
	<aura:registerEvent name="dragStart" type="ui:dragEvent" description="Event fired when user starts dragging this component."/>
	<aura:registerEvent name="dragEnd" type="ui:dragEvent" description="Event fired when this drag operation is being ended."/>
	<aura:registerEvent name="dropComplete" type="ui:dragEvent"  description="Event fired when drop operation is completed."/>
	
	<aura:handler name="dropComplete" action="{!c.handleDropComplete}"/>
	
	<aura:method name="setDropStatus" action="{!c.setDropStatus}" access="public">
		<aura:attribute name="isSuccessful" type="Boolean" default="true" description="Set to true if drop is performed or false if it's aborted."/>
	</aura:method>
	
	<aura:method name="fireDragEnd" action="{!c.fireDragEnd}" access="public">
		<aura:attribute name="isValid" type="Boolean" default="true" description="Set to true if dragEnd is performed or false if it's aborted."/>
		<aura:attribute name="isInAccessibilityMode" type="Boolean" default="true" description="Set to true if drag and drop operation is initiated in accessibility mode, i.e. through keyboard interaction."/>
	</aura:method>
	
    <div draggable="{!not(v.disable)}" aria-grabbed="{!v.ariaGrabbed}" class="{!v.class}" tabIndex="0" 
    	 ondragstart="{!c.handleDragStart}" ondragend="{!c.handleDragEnd}" onkeypress="{!c.handleKeyPress}">
	    {!v.body}
    </div>
    
</aura:component>