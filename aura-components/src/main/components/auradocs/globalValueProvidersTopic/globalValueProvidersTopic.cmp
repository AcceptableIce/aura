<!--

    Copyright (C) 2012 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="auradocs:topicPanel">
<aura:set attribute="title" value="Global Value Providers"/>

<p>Global value providers are global values and methods that a component can use in expressions. Global value providers are:
<ul>
    <li><code>$Label</code></li>
    <li><code>globalID</code></li>
    <li><code>$Browser</code></li>
</ul>
</p>

<h3><code>$Label</code></h3>

<p>Label files make it easier to translate and localize your applications by separating messages from source code. <code>$Label</code> makes it easy for you to use label files in your Aura application. Labels are hierarchical, and you access them using dot notation, <code>$Label.&lt;section&gt;.&lt;message_name&gt;</code>. For example, see the Like Button code sample previously shown, where messages are retrieved from labels:</p>

<code><aura:text value="{!"/>$Label.SocialApp.YouAndOthersLike}</code>

<!-- Commenting out because we don't document adapters yet. 
<p>If your platform already provides an analogous service, you can write an adapter to use <code>$Label</code> with it. See Localizing Your Application with Labels for more details.</p>
-->

<!-- <p>You can dynamically populate values in a label by using placeholders, such as {0} or {1}. For example, the following label uses a placeholder represented by {0}.</p> -->
<!-- <code><param name="NMembers">{0} Members</param></code> --> 
<!-- <p>This Aura label component provides the value for this label. The value can be a literal value or an expression. In this example, the Aura component provides the literal value of 5 and the value attribute of the label component specifies the label name.</p> -->  
<!-- <code><aura:label value="$Label.MobileWebChatter.NMembers">5</aura:label></code> -->
<!-- <p>The output is: 5 Members</p> -->
<!-- <p>Multiple placeholders can be specified and are ordered by their index, starting from 0. This is an example with two placeholders.</p> -->
<!-- <code><param name="NMembers">{0} Members and {1} Guests</param></code> --> 
<!-- <p>In this second example, the first placeholder is replaced by the literal value of 5 and the second placeholder is replaced by the value of an expression.</p> -->  
<!-- <code><aura:label value="$Label.MobileWebChatter.NMembers">5 {!m.guests}</aura:label></code> -->
<!-- <p>The output can look like: 5 Members and 2 Guests</p> -->
<!-- <p>The Aura label component can include multiple parameters. You can use multiple parameters using the following syntax.</p> -->
<!-- <code><aura:label value="{!$Label.section.param}">{!param0}{!param1}...</aura:label></code> -->
<!-- <p>Aura parses and replaces each expression in the body.</p> -->

<h3><code>globalID</code></h3>

<p>A globally unique identifier you can use to find and access a component. See <auradocs:topicLink topic="findById">Finding Components by ID</auradocs:topicLink> for more details. </p>

<h3><code>$Browser</code></h3>

<p>The <code>$Browser</code> global value provider provides information about the hardware and operating system of the browser accessing the application. Here are the attributes for <code>$Browser</code>.</p>

<table class="table table-bordered table-striped">
<thead>
    <tr>
        <th>Attribute</th>  
        <th>Description</th>      
    </tr>
</thead>
<tbody>
    <tr>
        <td>formFactor</td>
        <td>Returns a <code>FormFactor</code> enum value based on the type of hardware the browser is running on.
            <ul>
                <li>DESKTOP for a desktop client</li>
                <li>PHONE for a phone including a mobile phone with a browser and a smartphone</li>
                <li>TABLET for a tablet client (for which <code>isTablet</code> returns <code>true</code>)</li>
            </ul>
        </td>
    </tr> 
    <tr>
        <td>isAndroid</td>
        <td>Indicates whether the browser is running on an Android device (<code>true</code>) or not (<code>false</code>).</td>
    </tr> 
    <tr>
        <td>isIOS</td>
        <td>Not available in all implementations.  Indicates whether the browser is running on an iOS device (<code>true</code>) or not (<code>false</code>).</td>
    </tr> 
    <tr>
        <td>isIPad</td>
        <td>Not available in all implementations.  Indicates whether the browser is running on an iPad (<code>true</code>) or not (<code>false</code>).</td>
    </tr> 
    <tr>
        <td>isIPhone</td>
        <td>Not available in all implementations.  Indicates whether the browser is running on an iPhone (<code>true</code>) or not (<code>false</code>).</td>
    </tr> 
    <tr>
        <td>isPhone</td>
        <td>Indicates whether the browser is running on a phone including a mobile phone with a browser and a smartphone (<code>true</code>), or not (<code>false</code>).</td>
    </tr>
    <tr>
        <td>isTablet</td>
        <td>Indicates whether the browser is running on an iPad or a tablet with Android 2.2 or later (<code>true</code>) or not (<code>false</code>).</td>
    </tr>
</tbody>
</table>
 
<p><b>Example</b></p>
<p>This example shows how to get some <code>$Browser</code> attributes.</p>
<auradocs:example descriptor="auradocs:sampleBrowser" />

<p><b>See also:</b><br/>   
    <auradocs:topicLink topic="labelParametersTopic">Setting Label Parameters</auradocs:topicLink>    
</p>
</aura:component>