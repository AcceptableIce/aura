<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="auradocs:topicPanel">
    <aura:set attribute="title" value="Assertions"/>

    <p>Assertions evaluate an object or expression for expected results and are the foundation of component testing.
    Each JavaScript test can contain one or more assertions. The test passes only when all the assertions are successful.
    Assertions should be prefixed with <code>aura.test</code> or <code>$A.test</code>. Aura supports these assertions.</p>
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Assertion</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><code>aura.test.assert(condition, assertMessage)</code></td>
                <td>Checks that the condition is <code>true</code>. If it's <code>false</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertDefined(arg1, assertMessage)</code></td>
                <td>Checks that <code>arg1</code> is not undefined. If it's <code>undefined</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertNull(arg1, assertMessage)</code></td>
                <td>Checks that <code>arg1</code> is <code>null</code>. If it's not <code>null</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertNotNull(arg1, assertMessage)</code></td>
                <td>Checks that <code>arg1</code> is not <code>null</code>. If it's <code>null</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertTrue(condition, assertMessage)</code></td>
                <td>Checks that the condition is <code>true</code>. This is the same as <code>aura.test.assert(condition, assertMessage)</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertTruthy(condition, assertMessage)</code></td>
                <td>Checks that the condition is <code>true</code>, <code>null</code>, or defined. If the condition is <code>false</code> or <code>undefined</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertFalse(condition, assertMessage)</code></td>
                <td>Checks that the condition is <code>false</code>. If it's <code>true</code>, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertFalsy(condition, assertMessage)</code></td>
                <td>Checks that the condition is <code>false</code>, <code>null</code>, or <code>undefined</code>. If the condition is <code>true</code> or defined, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertEquals(arg1, arg2, assertMessage)</code></td>
                <td>Checks that <code>arg1 === arg2</code> is <code>true</code>. If the two values are not equal, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.assertNotEquals(arg1, arg2, assertMessage)</code></td>
                <td>Checks that <code>arg1 === arg2</code> is <code>false</code>.  If the two values are equal, throws an error with the <code>assertMessage</code>.</td>
            </tr>
            <tr>
                <td><code>aura.test.fail(assertMessage)</code></td>
                <td>Throws an error with the <code>assertMessage</code>. Use this to test error handling. For example:
<auradocs:codeblock>
try {
    // do something where you expect an error
    aura.test.fail("should have got an error");
}
catch(e){
    // assert expected error 
}
</auradocs:codeblock>               
                </td>
            </tr>
        </tbody>
    </table>
    
    <h3>Writing Asserts</h3>
    
    <p>Include unique and specific error messages in your assert statements. For example, use <code>assertTrue(run, "Returns true if the action has run successfully.")</code>
    instead of a generic message. Making each assert message unique also helps in narrowing down which assert statement has failed.</p>
</aura:component>
