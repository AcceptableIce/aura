<!--

    Copyright (C) 2012 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="auradocs:topicPanel">

    <aura:set attribute="title" value="Create an Aura App in Eclipse"/>

    <p>
    This section shows you how to create an Aura app in Eclipse using a Maven remote archetype.
    </p>

    <h2>Prerequisites</h2>
        <ol>

            <li><a href="http://www.oracle.com/technetwork/java/javase/downloads/" target="_blank">JDK 1.6</a></li>
            <li><a href="http://maven.apache.org/download.html" target="_blank">Maven 3</a></li>
            <li><a href="http://www.eclipse.org/downloads/" target="_blank">Eclipse 3.7</a>, and the <a href="http://www.eclipse.org/m2e/download/" target="_blank">m2eclipse plugin</a>. Choose the Eclipse distribution for Java EE Developers. This includes JavaScript editing and other Web UI tools.</li>

        </ol>


    <h2>Step 1: Modify the Maven settings.xml File</h2>

    <p>
    Navigate to your home directory and create or edit your <code>.m2/settings.xml </code> file to look like:
    </p>

<auradocs:codeblock>
<![CDATA[<settings>
  <profiles>
     <profile>

        <id>aura</id>
        <activation>
           <activeByDefault>true</activeByDefault>
         </activation>

          <repositories>
            <repository>
              <id>maven.auraframework.org.snapshots</id>
              <url>http://maven.auraframework.org/repo</url>
            </repository>
          </repositories>

    </profile>
  </profiles>
</settings>
]]>
</auradocs:codeblock>

    <h2>Step 2: Specify the Remote Archetype</h2>

        <ol>
            <li>In Eclipse, add the remote catalog.<br/>
            On Linux or Windows: Click <b>Window</b> &gt; <b>Preferences</b> &gt; <b>Maven</b> &gt; <b>Archetypes</b> &gt; <b>Add Remote Catalog...</b><br/>
            On Mac: Click <b>Eclipse</b> &gt; <b>Preferences</b></li>
            <li>In the Remote Archetype Catalog window, enter these values:<br/>
            <b>Catalog File</b>: <code>http://maven.auraframework.org/libs-release-local/archetype-catalog.xml</code><br/>
            <b>Description</b>: Aura Archetype
            </li>
            <li>Click <b>OK</b> and <b>Apply</b>.</li>

        </ol>

    <h2>Step 3: Verify the File Path for Maven User Settings</h2>

        <ol>
            <li>Click <b>Window</b> &gt; <b>Preferences</b> &gt; <b>Maven</b> &gt; <b>User Settings</b> &gt; <b>Update Settings</b>. </li>
            <li>Check that the <b>User Settings</b> field is set to <code>~/.m2/settings.xml</code>. Replace <code>~</code> with the path to your home directory.</li>
        </ol>

    <h2>Step 4: Create a New Project</h2>

        <ol>
            <li>Click <b>File</b> &gt; <b>New</b> &gt; <b>Other...</b> and select <b>Maven</b> &gt; <b>Maven Project</b>.</li>
            <li>Click <b>Next</b> twice.</li>
            <li>In the <b>Catalog</b> drop-down menu, select Aura Archetype.</li>
            <li>Select the archetype with Artifact Id of <code>aura-archetype-simple</code>, and click <b>Next</b>.</li>
            <li>Enter <code>org.myGroup</code> for <b>Group Id</b> and <code>helloWorldEclipse</code> for <b>Artifact Id</b>.</li>
            <li>Click <b>Finish</b>.</li>
        </ol>
        <auradocs:info>The Artifact Id is also the name of your project as it appears in the Package Explorer. It can only contain alphanumeric characters. See
        <a href="http://maven.apache.org/guides/mini/guide-naming-conventions.html" target="_blank">Guide to naming conventions</a> for examples of Group Id and Artifact Id naming conventions.</auradocs:info>

        <p>You should now have a new project called <code>helloWorldEclipse</code> in the Package Explorer.</p>


    <h2>Step 5: Build and Run Your Project</h2>

        <ol>
            <li>Click <b>Run</b> &gt; <b>Debug Configurations...</b> and double click Maven Build.</li>

            <li>Enter these values:<br/>
            <b>Name</b>: HelloWorld Server<br/>
            <b>Base directory</b>: <code>${workspace_loc:/helloWorldEclipse}</code> (where <code>helloWorldEclipse</code> is the same as your Artifact Id)<br/>
            <b>Goals</b>: <code>jetty:run</code></li>
            <auradocs:info>To use another port, such as port 8080, append <code>-Djetty.port=8080</code> to <code>jetty:run</code>.</auradocs:info>
            <li>Click <b>Debug</b>.</li>
        </ol>


    <h2>Step 6: Test Your App</h2>

        <ol>
            <li>Navigate to <code>http://localhost:8080</code> to test your app.<br/>
             You will be directed to <code>http://localhost:8080/helloWorldEclipse/helloWorldEclipse.app</code>.</li>
            <li>Validate that your app is working by looking for "hello web" in the browser page.</li>
        </ol>

    <p>Next: <auradocs:topicLink topic="auraPlugin">install the Aura Assist Eclipse plugin</auradocs:topicLink>.</p>

    <p><b>See also:</b><br/>
    <auradocs:topicLink topic="faqBrowsers">Which browsers does Aura support?</auradocs:topicLink> <br/>

    </p>
</aura:component>
