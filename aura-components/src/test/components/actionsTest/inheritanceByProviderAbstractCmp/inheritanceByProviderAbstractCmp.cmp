<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    When load alone, this component will load whatever its provider provides. its own markups and attributes down there 
    are ignored. by default, its provider will give us v.whichCmpToProvide = inheritanceByExtensionChildCmp.
    However this component is extensible, if we load component that extends this one, it will behave like normal 
    extensible component, the extended component will show up in its v.body, markup and attributes here will show up too. 
    Whatever its provider provides is gone.
-->
<aura:component abstract="true" provider="js://actionsTest.inheritanceByProviderAbstractCmp" extensible="true">
    <aura:dependency resource="markup://actionsTest:inheritanceBy*" type="COMPONENT"/>
    
    <aura:attribute name="whichCmpToProvide" type="String" default="actionsTest:inheritanceByExtensionChildCmp"/>
    
    <aura:attribute name="attributeAuraActionAbstract" type="Aura.Action" default="{!c.setAttributeAuraActionAbstract}"/>
    <aura:attribute name="WhichControllerWasCalledAbstract" type="string" default="no one"/>
    
    <div class="divForAbstractCmp">
        <p class="title"> Abstract Component, our provider is providing: "{!v.whichCmpToProvide}", 
        but if you see this line, we are not using the provider :-) </p>
        <div class="abstractlog">
            WhichControllerWasCalled? {!v.WhichControllerWasCalledAbstract}
        </div>
        <span class="buttons">
            <ui:button aura:id="testAction" label="clientSideActionInAbstractOnly" press="{!c.clientSideActionInAbstractOnly}"/>
            <ui:button aura:id="testAction" label="clientSideActionInBoth" press="{!c.clientSideActionInBoth}"/>
            <ui:button aura:id="testAction" label="serverSideActionInBoth" press="{!c.serverSideActionInBoth}"/>
            <ui:button aura:id="testAction" label="fire attributeAuraAction" press="{!c.fireAttributeAuraAction}"/>
        </span>
    </div>
    <div class="divForSolidCmp">
        {!v.body}
    </div>
</aura:component>
