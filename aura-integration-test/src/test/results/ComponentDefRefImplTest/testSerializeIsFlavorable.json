{
  "componentDef":{
    "serId":1,
    "value":{
      "descriptor":"markup://test:fakeComponentChild",
      "superDef":{
        "serId":2,
        "value":{
          "descriptor":"markup://aura:component",
          "rendererDef":{
            "serId":3,
            "value":{
              "descriptor":"js://aura.component",
              "render":
function(component) {
        var rendering = component.getRendering();
        return rendering||$A.renderingService.renderFacet(component,component.get("v.body"));
    },
              "afterRender":
function(component) {
        var body = component.get("v.body");
        $A.afterRender(body);
    },
              "rerender":
function(component) {
        var body = component.get("v.body");
        return $A.renderingService.rerenderFacet(component,body);
    },
              "unrender":
function(component) {
        var body = component.get("v.body");
        $A.renderingService.unrenderFacet(component,body);
    }
            }
          },
          "attributeDefs":[
            {
              "serId":4,
              "value":{
                "name":"body",
                "type":"aura://Aura.Component[]"
              }
            }
          ],
          "interfaces":[
            "markup://aura:rootComponent"
          ],
          "isAbstract":true,
          "componentClass":"function(){\n$A.componentService.addComponentClass(\"aura$component\", function() {\n\n    \n\n    var aura$component = function aura$component(config, localCreation, creatingPrototype) {\n        $A.Component.call(this, config, localCreation, creatingPrototype); \n    };\n    aura$component.prototype = new $A.Component(null, null, true);\n    aura$component.prototype.constructor = aura$component;\n\n    aura$component.Helper = function() {};\n\n    aura$component.prototype.helper = new aura$component.Helper();\n\n\n    aura$component.prototype.render = function() {\n        var renderable = this.getRenderable();\n        var component = renderable;\n        \n        var rendering = component.getRendering();\n        return rendering||$A.renderingService.renderFacet(component,component.get(\"v.body\"));\n    \n    };\n\n    aura$component.prototype.rerender = function() {\n        var renderable = this.getRenderable();\n        var component = renderable;\n        \n        var body = component.get(\"v.body\");\n        return $A.renderingService.rerenderFacet(component,body);\n    \n    };\n\n    aura$component.prototype.afterRender = function() {\n        var renderable = this.getRenderable();\n        var component = renderable;\n        \n        var body = component.get(\"v.body\");\n        $A.afterRender(body);\n    \n    };\n\n    aura$component.prototype.unrender = function() {\n        var renderable = this.getRenderable();\n        var component = renderable;\n        \n        var body = component.get(\"v.body\");\n        $A.renderingService.unrenderFacet(component,body);\n    \n    };\n\n    \n\n    $A.Component.registerMethods(aura$component);\n\n    return aura$component;\n});\n\n\n}"
        }
      },
      "attributeDefs":[
        {
          "serRefId":4
        }
      ],
      "componentClass":"function(){\n$A.componentService.addComponentClass(\"test$fakeComponentChild\", function() {\n\n    \n    var aura$component = $A.componentService.getComponentClass(\"aura$component\");\n    \n\n    var test$fakeComponentChild = function test$fakeComponentChild(config, localCreation, creatingPrototype) {\n        aura$component.call(this, config, localCreation, creatingPrototype); \n    };\n    test$fakeComponentChild.prototype = new aura$component(null, null, true);\n    test$fakeComponentChild.prototype.constructor = test$fakeComponentChild;\n\n    test$fakeComponentChild.Helper = function() {};\n\n    test$fakeComponentChild.Helper.prototype = new aura$component.Helper();\n    test$fakeComponentChild.Helper.prototype.constructor = test$fakeComponentChild.Helper;\n    test$fakeComponentChild.prototype.helper = new test$fakeComponentChild.Helper();\n\n\n    test$fakeComponentChild.prototype.render = function() {\n        var zuper = this.getSuper();\n        return zuper ? zuper.render() : undefined;\n    };\n    test$fakeComponentChild.prototype.rerender = function() {\n        var zuper = this.getSuper();\n        return zuper ? zuper.rerender() : undefined;\n    };\n    test$fakeComponentChild.prototype.afterRender = function() {\n        var zuper = this.getSuper();\n        return zuper ? zuper.afterRender() : undefined;\n    };\n    test$fakeComponentChild.prototype.unrender = function() {\n        var zuper = this.getSuper();\n        return zuper ? zuper.unrender() : undefined;\n    };\n    \n\n    $A.Component.registerMethods(test$fakeComponentChild);\n\n    return test$fakeComponentChild;\n});\n\n\n}"
    }
  },
  "flavorable":true
}