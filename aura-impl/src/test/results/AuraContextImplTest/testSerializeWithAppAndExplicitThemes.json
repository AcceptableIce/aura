{
  "mode":"UTEST",
  "app":"test:fakeThemeApp",
  "preloads":[

  ],
  "themes":[
    "markup://test:fakeTheme",
    "markup://test:fakeTheme2"
  ],
  "test":"org.auraframework.impl.context.AuraContextImplTest.testSerializeWithAppAndExplicitThemes",
  "globalValueProviders":[
    {
      "type":"$Browser",
      "values":{
        "formFactor":"DESKTOP",
        "isWindowsPhone":false,
        "isPhone":false,
        "isFIREFOX":false,
        "isIPad":false,
        "isAndroid":false,
        "isTablet":false,
        "isWEBKIT":false,
        "isIE7":false,
        "isIE6":false,
        "isIE9":false,
        "isIE8":false,
        "isIPhone":false,
        "isIOS":false,
        "isIE10":false
      }
    },
    {
      "type":"$Locale",
      "values":{
        "userLocaleLang":"en",
        "userLocaleCountry":"US",
        "language":"en",
        "country":"US",
        "variant":"",
        "langLocale":"en_US",
        "dateFormat":"MMM d, yyyy",
        "datetimeFormat":"MMM d, yyyy h:mm:ss a",
        "timeFormat":"h:mm:ss a",
        "timezone":"GMT",
        "timezoneFileName":"GMT",
        "numberFormat":"#,##0.###",
        "decimal":".",
        "grouping":",",
        "zero":"0",
        "percentFormat":"#,##0%",
        "currencyFormat":"¤#,##0.00;(¤#,##0.00)",
        "currencyCode":"USD",
        "currency":"$"
      }
    }
  ],
  "componentDefs":[
    {
      "serId":1,
      "value":{
        "descriptor":"markup://aura:application",
        "rendererDef":{
          "serId":2,
          "value":{
            "descriptor":"js://aura.component",
            "render":
function(component) {
        var rendering = component.getRendering();
        return rendering ? rendering : $A.render(component.getValue("v.body"));
    },
            "afterRender":
function(component) {
        var body = component.get("v.body");
        $A.afterRender(body);
    },
            "rerender":
function(component) {
        var body = component.get("v.body");
        return $A.rerender(body);
    },
            "unrender":
function(component) {
        var body = component.get("v.body");
        
        $A.unrender(body);

        var elements = component.getElements();
        for (var key in elements){
            var element = elements[key];
            delete elements[key];
            aura.util.removeElement(element);
        }
    }
          }
        },
        "attributeDefs":[
          {
            "serId":3,
            "value":{
              "name":"body",
              "type":"aura://Aura.Component[]"
            }
          }
        ],
        "interfaces":[
          "markup://aura:rootComponent"
        ],
        "isAbstract":true,
        "locationChangeEventDef":{
          "serId":4,
          "value":{
            "descriptor":"markup://aura:locationChange",
            "type":"APPLICATION",
            "superDef":{
              "serId":5,
              "value":{
                "descriptor":"markup://aura:applicationEvent",
                "type":"APPLICATION",
                "attributes":{

                }
              }
            },
            "attributes":{
              "token":{
                "serId":6,
                "value":{
                  "name":"token",
                  "type":"aura://String"
                }
              },
              "querystring":{
                "serId":7,
                "value":{
                  "name":"querystring",
                  "type":"aura://String"
                }
              }
            }
          }
        }
      }
    },
    {
      "serId":8,
      "value":{
        "descriptor":"markup://aura:component",
        "rendererDef":{
          "serRefId":2
        },
        "attributeDefs":[
          {
            "serId":9,
            "value":{
              "name":"body",
              "type":"aura://Aura.Component[]"
            }
          }
        ],
        "interfaces":[
          "markup://aura:rootComponent"
        ],
        "isAbstract":true
      }
    },
    {
      "serId":10,
      "value":{
        "descriptor":"markup://aura:expression",
        "rendererDef":{
          "serId":11,
          "value":{
            "descriptor":"js://aura.expression",
            "render":
function(component, helper) {
        if(component.isRendered()){
            $A.unrender(component);
        }

        var ret;
        var value = component.getValue("v.value");
        var created = false;
        if (value) {
            if (value.auraType === "Component" || !value.isLiteral()) {
                
                ret = $A.render(value);
                created = true;
                component.lastRenderedValue = value;
            } else if (value.isDefined()) {
                
                ret = [document.createTextNode(helper.getTextValue(value))];
                created = true;
            }
        }

        if (!created){
            ret = [document.createTextNode("")];
        }

        return ret;
    },
            "afterRender":
function(component) {
        var value = component.getValue("v.value");
        if (value && (value.auraType === "Component" || !value.isLiteral())) {
            
            $A.afterRender(value);
        }
    },
            "rerender":
function(component, helper) {
        if (!component.isRendered()) {
            return;
        }

        var value = component.getValue("v.value");

        if (value) {
            if (value.auraType === "Component" || !value.isLiteral()) {
                var last = component.lastRenderedValue;
                if (last !== value) {
                    var referenceNode = last.getReferenceNode();
                    $A.assert(referenceNode, "referenceNode is required");

                    
                    var tempReferenceNode = document.createComment("rerender expression: " + component);
                    $A.util.insertBefore(tempReferenceNode, referenceNode);
                    referenceNode = tempReferenceNode;

                    $A.unrender(last);

                    var ret = $A.render(value);
                    $A.util.insertBefore(ret, referenceNode);

                    
                    $A.util.removeElement(referenceNode);

                    component.lastRenderedValue = value;

                    $A.afterRender(value);
                    return ret;
                } else {
                    return $A.rerender(value);
                }
            } else {
                if (value.isDirty()){
                    
                    var element = component.getElement();

                    
                    if (element.parentNode) {
                        element.nodeValue = helper.getTextValue(value);
                    }
                }
            }
        }
    },
            "unrender":
function(component) {
        
        var value = component.getValue("v.value");
        if (value && (value.auraType === "Component" || !value.isLiteral())) {
            
            $A.unrender(value);
        }

        var elements = component.getElements();
        for(var key in elements){
            var element = elements[key];
            delete elements[key];
            $A.util.removeElement(element);
        }
    }
          }
        },
        "helperDef":{
          "serId":12,
          "value":{
            "descriptor":"js://aura.expression",
            "functions":{
              "getTextValue":
function(value) {
        var raw = value.unwrap();
        return $A.util.isUndefinedOrNull(raw) ? '' : raw;
    }
            }
          }
        },
        "attributeDefs":[
          {
            "serId":13,
            "value":{
              "name":"value",
              "type":"aura://String"
            }
          }
        ],
        "interfaces":[
          "markup://aura:rootComponent"
        ]
      }
    },
    {
      "serId":14,
      "value":{
        "descriptor":"markup://aura:html",
        "rendererDef":{
          "serId":15,
          "value":{
            "descriptor":"js://aura.html",
            "render":
function(component, helper) {
    	var placeholder = "auraplaceholder";
        var valueProvider = component.getAttributeValueProvider();
        var replacements = {};
        var ret;

        var tag = component.get("v.tag");
        if ($A.util.isUndefinedOrNull(tag)) {
            $A.error("Undefined tag attribute for "+component.getGlobalId());
            tag = "div";
        }
        var HTMLAttributes = component.getValue("v.HTMLAttributes");

        
        var isIE7 = $A.get("$Browser.isIE7");
        if(isIE7 ===  true && tag == "input"){
        	var value = $A.expressionService.getValue(valueProvider, "v.name");
        	value = value.getValue();
        	if($A.util.isEmpty(value)){
        		ret = document.createElement(tag);
        	}
        	else{
        		ret = document.createElement('<input name="' + value + '">');
        	}
        }
        else{
        	ret = document.createElement(tag);
        }

        if (HTMLAttributes && HTMLAttributes.each) {
            
            HTMLAttributes.each(helper.createHtmlAttribute, { scope: helper, ret: ret, component: component });
        }

        if (ret.tagName.toLowerCase() === "a" && !ret.getAttribute("href")) {
            ret.setAttribute("href", "javascript:void(0);");
        }

        if (helper.canHaveBody(component)) {
            var body = component.getValue("v.body");
            $A.render(body, ret);
        }

        return ret;
    },
            "afterRender":
function(component, helper) {
        if (helper.canHaveBody(component)) {
            $A.afterRender(component.get("v.body"));
        }
    },
            "rerender":
function(component, helper) {
        var element = component.getElement();
        if (!element) {
            return;
        }

        var valueProvider = component.getAttributeValueProvider();
        var expressionService = $A.expressionService;
        var HTMLAttributes = component.getValue("v.HTMLAttributes");
        if (HTMLAttributes && HTMLAttributes.each) {
            HTMLAttributes.each(function(name, ve) {
                
                
                if (ve.isExpression()) {
                    var lowerName = name.toLowerCase();
                    if (lowerName !== "height" && lowerName !== "width"
                            && lowerName !== "class"
                            && lowerName.indexOf("on") !== 0) {
                        var value = expressionService.getValue(valueProvider, ve);

                        if (value && value.isDirty()) {
                            var newValue;
                            var oldValue = element[helper.caseAttribute(lowerName)];

                            if (aura.util.arrayIndexOf(helper.SPECIAL_BOOLEANS, lowerName) > -1) {
                                
                                newValue = $A.util.getBooleanValue(value.getValue());
                            } else {
                                newValue = value.unwrap();
                            }

                            if (newValue !== oldValue) {
                            	helper.createHtmlAttribute(lowerName, newValue, { scope: helper, ret: element, component: component });
                            }
                        }
                    }
                }
            });

            var clz = HTMLAttributes.getValue("class");
            if (clz) {
                if (clz.isExpression()) {
                    clz = expressionService.getValue(valueProvider, clz);
                }
                if (clz.isDirty()) {

                    var c = clz.unwrap();
                    if (element.auraClass) {
                        c = c + " " + element.auraClass;
                    }
                    if (!$A.util.isUndefinedOrNull(c) && c !== element["className"]) {
                        element["className"] = c;
                    }
                }

            }
        }

        if (element.tagName.toLowerCase() === "a" && !element.getAttribute("href")) {
            element.setAttribute("href", "javascript:void(0);");
        }

        if (helper.canHaveBody(component)) {
            var body = component.getValue("v.body");
            $A.rerender(body, element, true);
        }
    },
            "unrender":
function(component, helper) {
        
        

        if (helper.canHaveBody(component)) {
            $A.unrender(component.get("v.body"));
        }

        var elements = component.getElements();
        for (var key in elements) {
            var element = elements[key];
            aura.util.removeElement(element);
            delete elements[key];
        }
    }
          }
        },
        "helperDef":{
          "serId":16,
          "value":{
            "descriptor":"js://aura.html",
            "functions":{
              "isInputNullValue":
function(tagName, attributeName, value) {
        if (tagName && attributeName) {
            return tagName.toLowerCase() === "input" && attributeName.toLowerCase() === "value" && value === null;
        }
        return false;
    },
              "initFastClick":
function() {
        var gesture = this.GESTURE(),
            FastClick;

        if (!this.FastClick) {
            FastClick = function(element, handler) {
                this.element = element;
                this.handler = handler;
                element.addEventListener(gesture.start, this, false);
            };

            FastClick.prototype = {
                handleEvent : function (event) {
                    switch (event.type) {
                    case 'touchstart':
                    case 'pointerdown':
                    case 'MSPointerDown':
                        this.onTouchStart(event);
                        break;
                    case 'touchmove':
                    case 'pointermove':
                    case 'MSPointerMove':
                        this.onTouchMove(event);
                        break;
                    case 'touchend':
                    case 'pointerup':
                    case 'MSPointerUp':
                        this.onClick(event);
                        break;
                    }
                },
                onTouchStart : function(event) {
                    var point = event.touches ? event.touches[0] : event;
                    $A.util.on(this.element, gesture.end, this, false);
                    
                    $A.util.on(this.element, gesture.move, this, false);
                    this.startX = point.pageX;
                    this.startY = point.pageY;
                },
                onTouchMove : function(event) {
                    var point = event.touches ? event.touches[0] : event;
                    if (Math.abs(point.pageX - this.startX) > 4 || Math.abs(point.pageY - this.startY) > 4) {
                        this.reset();
                    }
                },
                onClick : function(event) {
                    event.stopPropagation();
                    event.preventDefault();
                    this.element.focus();
                    this.handler(event);

                    if (event.type == gesture.end) {
                        FastClick.preventGhostClick(this.startX, this.startY);
                    }
                    this.reset();
                },
                reset : function() {
                   $A.util.removeOn(this.element, gesture.end, this, false);
                   $A.util.removeOn(this.element, gesture.move, this, false);

                    this.startX = 0;
                    this.startY = 0;
                }
            };

            FastClick.preventGhostClick  = function(x, y) {
                FastClick.clickbusterCoordinates.push(x, y);
                window.setTimeout(FastClick.pop, 2500);
            };

            FastClick.pop = function() {
                FastClick.clickbusterCoordinates.splice(0, 2);
            };

            FastClick.onClickBuster = function(event) {
                var point = event.touches ? event.touches[0] : event,
                    i, x, y;
                for (i = 0; i < FastClick.clickbusterCoordinates.length; i += 2) {
                    x = FastClick.clickbusterCoordinates[i];
                    y = FastClick.clickbusterCoordinates[i + 1];
                    if (Math.abs(point.pageX - x) < 25 && Math.abs(point.pageY - y) < 25) {
                        event.stopPropagation();
                        event.preventDefault();
                    }
                }
            };

            FastClick.clickbusterCoordinates = [];
            $A.util.on(document, "click", FastClick.onClickBuster, true);

            this.FastClick = FastClick;
        }

        return this.FastClick;
    },
              "createFastClickHandler":
function(element, handler) {
        var FastClick = this.initFastClick();
        if (this.supportsTouchEvents()) {
            new FastClick(element, handler);
        } else {
            $A.util.on(element, "click", handler);
        }
    },
              "supportsTouchEvents":
function() {
        return $A.util.supportsTouchEvents();
    },
              "BODYLESS_TAGS":{
                "hr":true,
                "col":true,
                "keygen":true,
                "param":true,
                "link":true,
                "track":true,
                "img":true,
                "br":true,
                "embed":true,
                "meta":true,
                "input":true,
                "area":true,
                "source":true,
                "base":true,
                "command":true,
                "wbr":true
              },
              "caseAttribute":
function(attribute) {
        return this.SPECIAL_CASINGS()[attribute.toLowerCase()] !== undefined ? this.SPECIAL_CASINGS()[attribute.toLowerCase()] : attribute.toLowerCase();
    },
              "GESTURE":
function() {
        var g;
        if (this.cachedGestures) {
            return this.cachedGestures;
        } else {

            if (navigator.pointerEnabled) {
                g = {
                        start : 'pointerdown',
                        move : 'pointermove',
                        end : 'pointerup' 
                    };

            } else if (navigator.msPointerEnabled) {
                g = {
                        start : 'MSPointerDown',
                        move : 'MSPointerMove',
                        end : 'MSPointerUp' 
                    };
                
            } else {
                g = {
                        start : 'touchstart',
                        move : 'touchmove',
                        end : 'touchend'
                    };
            }
            return this.cachedGestures = g;
        }
    },
              "createHtmlAttribute":
function(name, ve, config) {
        var ret           = config.ret,
            component     = config.component,
            valueProvider = component.getAttributeValueProvider(),
            on            = $A.util.on,
            value;

        
        if (name.toLowerCase().indexOf("on") === 0) {
            var eventName = name.substring(2);

            if (eventName.toLowerCase() === "click") {
                this.createFastClickHandler(ret, this.domEventHandler);
            } else {
                on(ret, eventName, this.domEventHandler);
            }
        } else {
            
            
            if (ve && ve.isExpression) {
                if (ve.isExpression()) {
                    value = $A.expressionService.getValue(valueProvider, ve);

                    
                    if (value && value.auraType === "Value") {
                        if (aura.util.arrayIndexOf(this.SPECIAL_BOOLEANS, name.toLowerCase()) > -1) {
                            
                            
                            value = $A.util.getBooleanValue(value.getValue());
                        } else {
                            value = value.getValue();
                        }
                    }
                } else {
                    value = ve.getValue();
                }
            } else{
                value = ve;
            }

            var isHash = value && value.indexOf && value.indexOf("#") === 0;
            if (name.toLowerCase() === "href" && ret.tagName && ret.tagName.toLowerCase() === "a" && value && (isHash || this.supportsTouchEvents())) {
            	var HTMLAttributes = component.getValue("v.HTMLAttributes");
                var target = HTMLAttributes.getValue("target");
                if (target) {
                    if (target.isExpression()) {
                        target = $A.expressionService.getValue(valueProvider, target);
                    }
                    target = target.unwrap();
                }
                this.createFastClickHandler(ret, function() {
                    if (isHash) {
                        $A.run(function () { $A.historyService.set(value.substring(1)); })
                    } else {
                        
                        window.open(value, target ? target : "_self");
                    }
                });

                var href = "javascript:void(0";
                if ($A.getContext().getMode() !== "PROD") {
                    
                    
                    href += "/*" + value + "\u002A/";
                }
                href += ");";

                ret.setAttribute("href", href);
            } else if (name.toLowerCase() === "role" || name.lastIndexOf("aria-", 0) === 0) {
                
                ret.setAttribute(name, value);
            } else if (aura.util.arrayIndexOf(this.SPECIAL_BOOLEANS, name.toLowerCase()) > -1) {
                
                var casedName = this.caseAttribute(name);
                if (value === false) {
                    ret.removeAttribute(casedName);
                } else {
                    ret.setAttribute(casedName, name);

                    
                    if (casedName === "checked"){
                        ret.setAttribute("defaultChecked", true);
                    }
                }
            } else {
                
                
                
                if (!aura.util.isUndefined(value) && !($A.util.isIE && this.isInputNullValue(ret.tagName, name, value))) {
                    var casedAttribute = this.caseAttribute(name);
                    var lowerName = name.toLowerCase();
                    if (lowerName === "style" && $A.util.isIE) {
                        ret.style.cssText = value;
                    } else if (lowerName === "type" || lowerName === "href" || lowerName === "style" || lowerName.indexOf("data-") === 0) {
                        
                        ret.setAttribute(casedAttribute, value);
                    } else {
                        ret[casedAttribute] = value;
                    }
                }
            }
        }
    },
              "SPECIAL_CASINGS":
function() {
        if (this.cachedCasings) {
            return this.cachedCasings;
        } else {
            return this.cachedCasings = (function() {
                var ret = {};
                var caseSensitiveAttributes = ["readOnly",
                                               "colSpan",
                                               "rowSpan",
                                               "bgColor",
                                               "tabIndex",
                                               "useMap",
                                               "accessKey",
                                               "maxLength"
                                               ];
                var attr;
                for (var i=0, len=caseSensitiveAttributes.length; i<len; i++) {
                    attr = caseSensitiveAttributes[i];
                    ret[attr.toLowerCase()] = attr;
                }

                ret["for"] = "htmlFor";
                ret["class"] = "className";

                return ret;
            }());
        }
    },
              "SPECIAL_BOOLEANS":[
                "checked",
                "selected",
                "disabled",
                "readonly",
                "multiple",
                "ismap",
                "defer",
                "declare",
                "noresize",
                "nowrap",
                "noshade",
                "compact",
                "autocomplete",
                "required"
              ],
              "canHaveBody":
function(component) {
        var tag = component.get("v.tag");
        if ($A.util.isUndefinedOrNull(tag)) {
            $A.error("Undefined tag attribute for "+component.getGlobalId());
            return true;
        }
        return !this.BODYLESS_TAGS[tag.toLowerCase()];
    },
              "domEventHandler":
function(event) {
        var eventName       = "on" + event.type,
            element         = event.currentTarget,
            ownerComponent  = $A.componentService.getRenderingComponentForElement(element),
            valueProvider   = ownerComponent.getAttributeValueProvider(),
            htmlAttributes  = ownerComponent.getValue("v.HTMLAttributes"),
            valueExpression = htmlAttributes.getValue(eventName),
            onclickExpression;

        if (eventName === 'ontouchend' || eventName === 'onpointerup' || eventName === 'onMSPointerUp') {
            
        	 onclickExpression = htmlAttributes.getValue("onclick");
             if (onclickExpression.isDefined()) {
                 if (!valueExpression.isDefined()) {
                    
                    valueExpression = onclickExpression;
                }
            }
        }

        $A.run(function () {
                var action = $A.expressionService.get(valueProvider, valueExpression);
                action.runDeprecated(event);
            })
    }
            }
          }
        },
        "attributeDefs":[
          {
            "serId":17,
            "value":{
              "name":"body",
              "type":"aura://Aura.Component[]"
            }
          },
          {
            "serId":18,
            "value":{
              "name":"tag",
              "type":"aura://String"
            }
          },
          {
            "serId":19,
            "value":{
              "name":"HTMLAttributes",
              "type":"aura://Map"
            }
          }
        ],
        "interfaces":[
          "markup://aura:rootComponent"
        ]
      }
    },
    {
      "serId":20,
      "value":{
        "descriptor":"markup://aura:placeholder",
        "rendererDef":{
          "serId":21,
          "value":{
            "descriptor":"js://aura.placeholder",
            "afterRender":
function(cmp) {
        if ($A.util.getBooleanValue(cmp.get("v.loaded"))){
            return this.superAfterRender();
        }

        var action = $A.get("c.aura://ComponentController.getComponent");
        var attributes = cmp.getValue("v.attributes");
        var atts = {};
        var avp = cmp.getAttributeValueProvider();

        if(attributes.each){
            attributes.each(function(key, value){
                atts[key] = $A.componentService.computeValue(value, avp, true);
            });
        }

        action.setCallback(this, function(a){
            var newBody;
            if (a.getState() === "SUCCESS"){
                newBody = $A.newCmpDeprecated(a.getReturnValue(), avp, false, false);
                newBody.mergeAttributes(attributes, true);
            } else {
                var errors = a.getError();
                newBody = $A.newCmpDeprecated("markup://aura:text", null, false, false);
                if (errors) {
                    newBody.set("v.value", errors[0].message);
                } else {
                    newBody.set("v.value", 'unknown error');
                }
            }
            
            cmp.set("v.body", newBody);

            $A.rerender(cmp);

            
            var localId = cmp.getLocalId();
            if(localId){
                var cvp = cmp.getComponentValueProvider();
                cvp.deIndex(localId, cmp.getGlobalId());
                cvp.index(localId, newBody.getGlobalId());
            }
        });
        
        var desc = cmp.get("v.refDescriptor");
        action.setParams({
            "name" : desc,
            "attributes" : atts
        });

        action.setExclusive($A.util.getBooleanValue(cmp.get("v.exclusive")));
        cmp.set("v.loaded", true);
        $A.enqueueAction(action);

        this.superAfterRender();
    }
          }
        },
        "styleDef":{
          "serId":22,
          "value":{
            "descriptor":"css://aura.placeholder",
            "code":"@-webkit-keyframes auraPlaceholderSpin {\n  from {-webkit-transform:rotate(0deg)}\n  to {-webkit-transform:rotate(720deg)}\n}\n@keyframes auraPlaceholderSpin {\n  from {-webkit-transform:rotate(0deg); -ms-transform:rotate(0deg); transform:rotate(0deg)}\n  to {-webkit-transform:rotate(720deg); -ms-transform:rotate(720deg); transform:rotate(720deg)}\n}\n.auraPlaceholder.spin {display:inline-block; border:1px solid #666; background-color:#888; border-radius:16px; width:9px; height:9px; -webkit-animation-iteration-count:infinite; -webkit-animation-name:auraPlaceholderSpin; -webkit-animation-duration:.75s; -webkit-animation-timing-function:ease-in-out; animation-iteration-count:infinite; animation-name:auraPlaceholderSpin; animation-duration:.75s; animation-timing-function:ease-in-out}\n.auraPlaceholder.spin:AFTER, .auraPlaceholder.spin:BEFORE {content:\"\"; border-radius:4px; background-color:#666; position:absolute}\n.auraPlaceholder.spin:AFTER {height:1px; width:17px; margin-top:4px; margin-left:-4px}\n.auraPlaceholder.spin:BEFORE {height:17px; width:1px; margin-left:4px; margin-top:-4px}",
            "className":"auraPlaceholder"
          }
        },
        "superDef":{
          "serRefId":8
        },
        "attributeDefs":[
          {
            "serId":23,
            "value":{
              "name":"body",
              "type":"aura://Aura.Component[]",
              "default":[
                {
                  "componentDef":{
                    "serRefId":14
                  },
                  "attributes":{
                    "values":{
                      "HTMLAttributes":{
                        "descriptor":"HTMLAttributes",
                        "value":{
                          "class":"spin"
                        }
                      },
                      "tag":{
                        "descriptor":"tag",
                        "value":"div"
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "serId":24,
            "value":{
              "name":"refDescriptor",
              "type":"java://org.auraframework.def.DefDescriptor"
            }
          },
          {
            "serId":25,
            "value":{
              "name":"attributes",
              "type":"aura://Object"
            }
          },
          {
            "serId":26,
            "value":{
              "name":"loaded",
              "type":"aura://Boolean",
              "default":false
            }
          },
          {
            "serId":27,
            "value":{
              "name":"exclusive",
              "type":"aura://Boolean",
              "default":false
            }
          }
        ],
        "facets":[
          {
            "descriptor":"body",
            "value":[
              {
                "componentDef":{
                  "serRefId":10
                },
                "attributes":{
                  "values":{
                    "value":{
                      "descriptor":"value",
                      "value":"{!v.body}"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "serId":28,
      "value":{
        "descriptor":"markup://aura:template",
        "superDef":{
          "serRefId":8
        },
        "attributeDefs":[
          {
            "serRefId":9
          },
          {
            "serId":29,
            "value":{
              "name":"title",
              "type":"aura://String",
              "default":"Aura"
            }
          },
          {
            "serId":30,
            "value":{
              "name":"auraStyleTags",
              "type":"aura://String"
            }
          },
          {
            "serId":31,
            "value":{
              "name":"auraScriptTags",
              "type":"aura://String"
            }
          },
          {
            "serId":32,
            "value":{
              "name":"auraBaseScriptTags",
              "type":"aura://String"
            }
          },
          {
            "serId":33,
            "value":{
              "name":"auraNamespacesScriptTags",
              "type":"aura://String"
            }
          },
          {
            "serId":34,
            "value":{
              "name":"auraInlineStyle",
              "type":"aura://String"
            }
          },
          {
            "serId":35,
            "value":{
              "name":"auraInit",
              "type":"aura://String"
            }
          },
          {
            "serId":36,
            "value":{
              "name":"auraInitSync",
              "type":"aura://String"
            }
          },
          {
            "serId":37,
            "value":{
              "name":"auraPreInitBlock",
              "type":"aura://String"
            }
          },
          {
            "serId":38,
            "value":{
              "name":"auraInitBlock",
              "type":"aura://String"
            }
          },
          {
            "serId":39,
            "value":{
              "name":"autoInitialize",
              "type":"aura://String",
              "default":"true"
            }
          },
          {
            "serId":40,
            "value":{
              "name":"autoInitializeSync",
              "type":"aura://String",
              "default":"false"
            }
          },
          {
            "serId":41,
            "value":{
              "name":"afterAuraInit",
              "type":"aura://String"
            }
          },
          {
            "serId":42,
            "value":{
              "name":"loadingText",
              "type":"aura://String",
              "default":"Loading"
            }
          },
          {
            "serId":43,
            "value":{
              "name":"errorTitle",
              "type":"aura://String",
              "default":"Looks like there's a problem:"
            }
          },
          {
            "serId":44,
            "value":{
              "name":"errorMessage",
              "type":"aura://String",
              "default":"CSS Error"
            }
          },
          {
            "serId":45,
            "value":{
              "name":"forceError",
              "type":"aura://Boolean",
              "default":false
            }
          },
          {
            "serId":46,
            "value":{
              "name":"extraScriptTags",
              "type":"aura://Aura.Component[]"
            }
          },
          {
            "serId":47,
            "value":{
              "name":"extraMetaTags",
              "type":"aura://Aura.Component[]"
            }
          },
          {
            "serId":48,
            "value":{
              "name":"defaultBodyClass",
              "type":"aura://String",
              "default":"loading"
            }
          },
          {
            "serId":49,
            "value":{
              "name":"bodyClass",
              "type":"aura://String"
            }
          },
          {
            "serId":50,
            "value":{
              "name":"manifest",
              "type":"aura://String"
            }
          },
          {
            "serId":51,
            "value":{
              "name":"lastMod",
              "type":"aura://String"
            }
          },
          {
            "serId":52,
            "value":{
              "name":"doctype",
              "type":"aura://String",
              "default":"\u003C!DOCTYPE html\u003E"
            }
          },
          {
            "serId":53,
            "value":{
              "name":"extraStyleTags",
              "type":"aura://Aura.Component[]"
            }
          },
          {
            "serId":54,
            "value":{
              "name":"inlineStyle",
              "type":"aura://Aura.Component[]",
              "default":[
                {
                  "componentDef":{
                    "serId":55,
                    "value":{
                      "descriptor":"markup://aura:text",
                      "rendererDef":{
                        "serId":56,
                        "value":{
                          "descriptor":"js://aura.text",
                          "render":
function(component) {
        var value = component.get("v.value");
        if ($A.util.isUndefined(value)) {
            value = '';
        } else if (!$A.util.isString(value)) {
            value = String(value);
        }
        
        var trunc = component.get("v.truncate");
        var truncateByWord = $A.util.getBooleanValue(component.get("v.truncateByWord"));
        var ellipsis = $A.util.getBooleanValue(component.get("v.ellipsis"));
        
        if(trunc){
            trunc = 1 * trunc;
            value = aura.util.truncate(value, trunc, ellipsis, truncateByWord);
        }
        
        return document.createTextNode(value);
    }
                        }
                      },
                      "attributeDefs":[
                        {
                          "serId":57,
                          "value":{
                            "name":"value",
                            "type":"aura://String"
                          }
                        },
                        {
                          "serId":58,
                          "value":{
                            "name":"truncate",
                            "type":"aura://Integer"
                          }
                        },
                        {
                          "serId":59,
                          "value":{
                            "name":"truncateByWord",
                            "type":"aura://Boolean",
                            "default":false
                          }
                        },
                        {
                          "serId":60,
                          "value":{
                            "name":"ellipsis",
                            "type":"aura://Boolean",
                            "default":true
                          }
                        }
                      ],
                      "interfaces":[
                        "markup://aura:rootComponent"
                      ]
                    }
                  },
                  "attributes":{
                    "values":{
                      "value":{
                        "descriptor":"value",
                        "value":"\n        .auraMsgMask{\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background:-webkit-radial-gradient(circle, rgba(0,0,0,0.2), #000);\n            z-index: 1000;\n            display: none;\n        }\n        .auraMsgBox{\n            display: none;\n            width:100%;\n            margin: 120px auto 0;\n            background-color: slategray;\n            z-index: 1002;\n            border-radius: 5px;\n            box-shadow: 0 20px 40px rgba(0,0,0,.8), inset 0 1px 1px rgba(255, 255, 255, .3);\n            overflow: hidden;\n        }\n        .auraMsgBox h2{\n            font-weight:bold;\n            font-size: 1.2em;\n            line-height: 1.5em;\n            margin: 0;\n            padding:10px;\n            overflow: hidden;\n        }\n        .auraErrorBox h2{\n            text-shadow: 1px 1px 1px rgba(0,0,0,.5);\n            color: #fff;\n        }\n        .auraMsgBox a.close{\n            float: right;\n            font-weight: bold;\n            font-size: 20px;\n            line-height: 1em;\n            color: #fff;\n            background-color: transparent;\n            border: 1px solid #666;\n            box-shadow: inset 0 1px 1px rgba(255, 255, 255, .2), 0 1px 1px rgba(0, 0, 0, .4);\n            border-radius: 4px;\n            padding: 0 6px 4px;\n            margin:0;\n        }\n        .auraLoadingBox{\n            text-align: center;\n            width:200px;\n            line-height: 80px;\n        }\n        .auraErrorBox{\n            position: relative;\n            width: 80%;\n            z-index: 999;\n        }\n        .auraError #auraErrorMessage{\n            background-color: gainsboro;\n            margin: 0 10px 10px;\n            padding: 10px;\n            color: #333;\n            min-height: 200px;\n            max-height: 300px;\n            overflow: auto;\n            white-space: pre-wrap;\n            font-family: monospace;\n            box-shadow: inset 0 0 10px rgba(0,0,0,.4);\n            border: 1px solid #666;\n        }\n        .auraForcedErrorBox.auraMsgMask,\n        .auraForcedErrorBox .auraErrorBox,\n        body.auraError .auraMsgMask,\n        body.loading .auraLoadingBox,\n        body.auraError .auraErrorBox{\n            display:block;\n        }\n    "
                      }
                    }
                  }
                }
              ]
            }
          },
          {
            "serId":61,
            "value":{
              "name":"appcacheProgressBarStyle",
              "type":"aura://Aura.Component[]",
              "default":[
                {
                  "componentDef":{
                    "serRefId":55
                  },
                  "attributes":{
                    "values":{
                      "value":{
                        "descriptor":"value",
                        "value":"\n        #auraAppcacheProgress{\n            display:none;\n            position: absolute;\n            width: 120px;\n            height: 26px;\n            top: -10px;\n            left: 50%;\n            margin-left: -60px;\n            background-color: gray;\n            border-radius:5px;\n            overflow:hidden;\n            z-index:9999;\n        }\n        #auraAppcacheProgress .progressBox{\n            position: absolute;\n            top:14px;\n            left:10px;\n            width:100px;\n            height:6px;\n            overflow:hidden;\n            background-color:white;\n            border-style:solid;\n            border-color:#999;\n            border-width:1px;\n        }\n        #auraAppcacheProgress .progressBar{\n            width:1px;\n            height:8px;\n            overflow:hidden;\n            background-color:blue;\n            border-style:solid;\n            border-color:black;\n            border-width:1px;\n        }\n        #auraAppcacheProgress.error .progressBar{\n            border-color:red;\n            background-color:pink;\n        }\n    "
                      }
                    }
                  }
                }
              ]
            }
          }
        ],
        "facets":[
          {
            "descriptor":"body",
            "value":[
              {
                "componentDef":{
                  "serRefId":10
                },
                "attributes":{
                  "values":{
                    "value":{
                      "descriptor":"value",
                      "value":"{!v.doctype}"
                    }
                  }
                }
              },
              {
                "componentDef":{
                  "serRefId":14
                },
                "attributes":{
                  "values":{
                    "body":{
                      "descriptor":"body",
                      "value":[
                        {
                          "componentDef":{
                            "serRefId":14
                          },
                          "attributes":{
                            "values":{
                              "body":{
                                "descriptor":"body",
                                "value":[
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.title}"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"title"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"var pageStartTime = (new Date()).getTime();"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"script"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.extraMetaTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, font, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    dl, dt, dd, fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-weight: inherit;\n        font-style: inherit;\n        font-size: 100%;\n        vertical-align: baseline;\n    }\n    a{\n        text-decoration: none;\n        color: #015BA7;\n    }\n    body {\n        line-height: 1;\n        color: black;\n        background: white;\n        font-family:\"HelveticaNeue\", Helvetica, Arial, sans-serif;\n    }\n    html,body{\n        height : 100%;\n    }\n    /* tables still need 'cellspacing=\"0\"' in the markup \u002A/\n    table {\n        border-collapse: separate;\n        border-spacing: 0;\n    }\n    caption, th, td {\n        text-align: left;\n        font-weight: normal;\n    }\n    blockquote:before, blockquote:after,\n    q:before, q:after {\n        content: \"\";\n    }\n    blockquote, q {\n        quotes: \"\" \"\";\n    }\n    /* For hidden text used by accessibility \u002A/\n    .assistiveText {\n        position: absolute !important;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n        clip: rect(1px 1px 1px 1px); /* IE6, IE7 \u002A/\n        clip: rect(1px, 1px, 1px, 1px);\n    }\n    .visible {\n        display: block;\n    }\n    .invisible {\n        display: none;\n    }\n            "
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"style"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.inlineStyle}"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.appcacheProgressBarStyle}"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"style"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraStyleTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.extraStyleTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.auraInlineStyle}"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"style"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "HTMLAttributes":{
                                "descriptor":"HTMLAttributes",
                                "value":{

                                }
                              },
                              "tag":{
                                "descriptor":"tag",
                                "value":"head"
                              }
                            }
                          }
                        },
                        {
                          "componentDef":{
                            "serRefId":14
                          },
                          "attributes":{
                            "values":{
                              "body":{
                                "descriptor":"body",
                                "value":[
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":14
                                              },
                                              "attributes":{
                                                "values":{
                                                  "body":{
                                                    "descriptor":"body",
                                                    "value":[
                                                      {
                                                        "componentDef":{
                                                          "serRefId":14
                                                        },
                                                        "attributes":{
                                                          "values":{
                                                            "HTMLAttributes":{
                                                              "descriptor":"HTMLAttributes",
                                                              "value":{
                                                                "class":"progressBar"
                                                              }
                                                            },
                                                            "tag":{
                                                              "descriptor":"tag",
                                                              "value":"div"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "HTMLAttributes":{
                                                    "descriptor":"HTMLAttributes",
                                                    "value":{
                                                      "class":"progressBox"
                                                    }
                                                  },
                                                  "tag":{
                                                    "descriptor":"tag",
                                                    "value":"div"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{
                                            "id":"auraAppcacheProgress"
                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"div"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "localId":"auraLoadingBox",
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":14
                                              },
                                              "attributes":{
                                                "values":{
                                                  "HTMLAttributes":{
                                                    "descriptor":"HTMLAttributes",
                                                    "value":{
                                                      "class":"logo"
                                                    }
                                                  },
                                                  "tag":{
                                                    "descriptor":"tag",
                                                    "value":"div"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":14
                                              },
                                              "attributes":{
                                                "values":{
                                                  "HTMLAttributes":{
                                                    "descriptor":"HTMLAttributes",
                                                    "value":{
                                                      "class":"spinner"
                                                    }
                                                  },
                                                  "tag":{
                                                    "descriptor":"tag",
                                                    "value":"div"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":14
                                              },
                                              "attributes":{
                                                "values":{
                                                  "body":{
                                                    "descriptor":"body",
                                                    "value":[
                                                      {
                                                        "componentDef":{
                                                          "serRefId":10
                                                        },
                                                        "attributes":{
                                                          "values":{
                                                            "value":{
                                                              "descriptor":"value",
                                                              "value":"{!v.loadingText}"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "HTMLAttributes":{
                                                    "descriptor":"HTMLAttributes",
                                                    "value":{

                                                    }
                                                  },
                                                  "tag":{
                                                    "descriptor":"tag",
                                                    "value":"h2"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{
                                            "class":"auraMsgBox auraLoadingBox"
                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"div"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "localId":"auraErrorMask",
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":14
                                              },
                                              "localId":"auraError",
                                              "attributes":{
                                                "values":{
                                                  "body":{
                                                    "descriptor":"body",
                                                    "value":[
                                                      {
                                                        "componentDef":{
                                                          "serRefId":14
                                                        },
                                                        "attributes":{
                                                          "values":{
                                                            "body":{
                                                              "descriptor":"body",
                                                              "value":[
                                                                {
                                                                  "componentDef":{
                                                                    "serRefId":14
                                                                  },
                                                                  "attributes":{
                                                                    "values":{
                                                                      "body":{
                                                                        "descriptor":"body",
                                                                        "value":[
                                                                          {
                                                                            "componentDef":{
                                                                              "serRefId":55
                                                                            },
                                                                            "attributes":{
                                                                              "values":{
                                                                                "value":{
                                                                                  "descriptor":"value",
                                                                                  "value":"×"
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "HTMLAttributes":{
                                                                        "descriptor":"HTMLAttributes",
                                                                        "value":{
                                                                          "class":"close",
                                                                          "href":"javascript:void(0);",
                                                                          "onclick":"dismissError();"
                                                                        }
                                                                      },
                                                                      "tag":{
                                                                        "descriptor":"tag",
                                                                        "value":"a"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "componentDef":{
                                                                    "serRefId":10
                                                                  },
                                                                  "attributes":{
                                                                    "values":{
                                                                      "value":{
                                                                        "descriptor":"value",
                                                                        "value":"{!v.errorTitle}"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "HTMLAttributes":{
                                                              "descriptor":"HTMLAttributes",
                                                              "value":{

                                                              }
                                                            },
                                                            "tag":{
                                                              "descriptor":"tag",
                                                              "value":"h2"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "componentDef":{
                                                          "serRefId":14
                                                        },
                                                        "attributes":{
                                                          "values":{
                                                            "body":{
                                                              "descriptor":"body",
                                                              "value":[
                                                                {
                                                                  "componentDef":{
                                                                    "serRefId":10
                                                                  },
                                                                  "attributes":{
                                                                    "values":{
                                                                      "value":{
                                                                        "descriptor":"value",
                                                                        "value":"{!v.errorMessage}"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "HTMLAttributes":{
                                                              "descriptor":"HTMLAttributes",
                                                              "value":{
                                                                "id":"auraErrorMessage"
                                                              }
                                                            },
                                                            "tag":{
                                                              "descriptor":"tag",
                                                              "value":"div"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "HTMLAttributes":{
                                                    "descriptor":"HTMLAttributes",
                                                    "value":{
                                                      "class":"auraMsgBox auraErrorBox"
                                                    }
                                                  },
                                                  "tag":{
                                                    "descriptor":"tag",
                                                    "value":"div"
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{
                                            "class":{
                                              "exprType":"FUNCTION",
                                              "key":"add",
                                              "args":[
                                                "auraMsgMask",
                                                {
                                                  "exprType":"FUNCTION",
                                                  "key":"if",
                                                  "args":[
                                                    {
                                                      "exprType":"FUNCTION",
                                                      "key":"or",
                                                      "args":[
                                                        {
                                                          "exprType":"FUNCTION",
                                                          "key":"eq",
                                                          "args":[
                                                            "{!v.forceError}",
                                                            true
                                                          ]
                                                        },
                                                        {
                                                          "exprType":"FUNCTION",
                                                          "key":"eq",
                                                          "args":[
                                                            "{!v.forceError}",
                                                            "true"
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    " auraForcedErrorBox",
                                                    ""
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"div"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.body}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.extraScriptTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraScriptTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraBaseScriptTags}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraPreInitBlock}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":14
                                    },
                                    "attributes":{
                                      "values":{
                                        "body":{
                                          "descriptor":"body",
                                          "value":[
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"\n            if ("
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.autoInitialize}"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":") {\n                $A.initAsync("
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.auraInit}"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":");\n            }else if("
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.autoInitializeSync}"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"){\n                $A.initConfig("
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":10
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":"{!v.auraInitSync}"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "componentDef":{
                                                "serRefId":55
                                              },
                                              "attributes":{
                                                "values":{
                                                  "value":{
                                                    "descriptor":"value",
                                                    "value":");\n            }\n            function dismissError() {\n                $A.util.removeClass(document.body,'auraError');\n                $A.util.removeClass(auraErrorMask,'auraForcedErrorBox');\n            }\n            "
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "HTMLAttributes":{
                                          "descriptor":"HTMLAttributes",
                                          "value":{

                                          }
                                        },
                                        "tag":{
                                          "descriptor":"tag",
                                          "value":"script"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraInitBlock}"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "componentDef":{
                                      "serRefId":10
                                    },
                                    "attributes":{
                                      "values":{
                                        "value":{
                                          "descriptor":"value",
                                          "value":"{!v.auraNamespacesScriptTags}"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "HTMLAttributes":{
                                "descriptor":"HTMLAttributes",
                                "value":{
                                  "class":{
                                    "exprType":"FUNCTION",
                                    "key":"add",
                                    "args":[
                                      {
                                        "exprType":"FUNCTION",
                                        "key":"add",
                                        "args":[
                                          "{!v.bodyClass}",
                                          " "
                                        ]
                                      },
                                      "{!v.defaultBodyClass}"
                                    ]
                                  }
                                }
                              },
                              "tag":{
                                "descriptor":"tag",
                                "value":"body"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "HTMLAttributes":{
                      "descriptor":"HTMLAttributes",
                      "value":{
                        "data-lm":"{!v.lastMod}",
                        "manifest":"{!v.manifest}"
                      }
                    },
                    "tag":{
                      "descriptor":"tag",
                      "value":"html"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "serRefId":55
    },
    {
      "serId":62,
      "value":{
        "descriptor":"markup://auradev:blankTemplate",
        "superDef":{
          "serRefId":8
        },
        "attributeDefs":[
          {
            "serRefId":9
          }
        ],
        "facets":[
          {
            "descriptor":"body",
            "value":[
              {
                "componentDef":{
                  "serRefId":10
                },
                "attributes":{
                  "values":{
                    "value":{
                      "descriptor":"value",
                      "value":"{!v.body}"
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    {
      "serId":63,
      "value":{
        "descriptor":"markup://test:fakeThemeApp",
        "superDef":{
          "serRefId":1
        },
        "attributeDefs":[
          {
            "serRefId":3
          }
        ],
        "facets":[
          {
            "descriptor":"body",
            "value":[
              {
                "componentDef":{
                  "serRefId":55
                },
                "attributes":{
                  "values":{
                    "value":{
                      "descriptor":"value",
                      "value":"\n fakeThemeApp\n"
                    }
                  }
                }
              }
            ]
          }
        ],
        "locationChangeEventDef":{
          "serRefId":4
        }
      }
    }
  ],
  "eventDefs":[
    {
      "serRefId":5
    },
    {
      "serId":64,
      "value":{
        "descriptor":"markup://aura:asyncRerender",
        "type":"COMPONENT",
        "superDef":{
          "serId":65,
          "value":{
            "descriptor":"markup://aura:componentEvent",
            "type":"COMPONENT",
            "attributes":{

            }
          }
        },
        "attributes":{

        }
      }
    },
    {
      "serId":66,
      "value":{
        "descriptor":"markup://aura:beforeLayoutChange",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{
          "title":{
            "serId":67,
            "value":{
              "name":"title",
              "type":"aura://String"
            }
          },
          "prevTitle":{
            "serId":68,
            "value":{
              "name":"prevTitle",
              "type":"aura://String"
            }
          },
          "layoutName":{
            "serId":69,
            "value":{
              "name":"layoutName",
              "type":"aura://String"
            }
          },
          "prevLayoutName":{
            "serId":70,
            "value":{
              "name":"prevLayoutName",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serId":71,
      "value":{
        "descriptor":"markup://aura:clientOutOfSync",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serRefId":65
    },
    {
      "serId":72,
      "value":{
        "descriptor":"markup://aura:connectionLost",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serId":73,
      "value":{
        "descriptor":"markup://aura:connectionResumed",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serId":74,
      "value":{
        "descriptor":"markup://aura:debugLog",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{
          "type":{
            "serId":75,
            "value":{
              "name":"type",
              "type":"aura://String"
            }
          },
          "message":{
            "serId":76,
            "value":{
              "name":"message",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serId":77,
      "value":{
        "descriptor":"markup://aura:doneRendering",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serId":78,
      "value":{
        "descriptor":"markup://aura:doneWaiting",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serId":79,
      "value":{
        "descriptor":"markup://aura:initialized",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serId":80,
      "value":{
        "descriptor":"markup://aura:invalidSession",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{
          "newToken":{
            "serId":81,
            "value":{
              "name":"newToken",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serId":82,
      "value":{
        "descriptor":"markup://aura:layoutChange",
        "type":"APPLICATION",
        "superDef":{
          "serId":83,
          "value":{
            "descriptor":"markup://aura:titleChange",
            "type":"APPLICATION",
            "superDef":{
              "serRefId":5
            },
            "attributes":{
              "title":{
                "serId":84,
                "value":{
                  "name":"title",
                  "type":"aura://String"
                }
              },
              "prevTitle":{
                "serId":85,
                "value":{
                  "name":"prevTitle",
                  "type":"aura://String"
                }
              }
            }
          }
        },
        "attributes":{
          "prevTitle":{
            "serRefId":85
          },
          "title":{
            "serRefId":84
          },
          "layoutName":{
            "serId":86,
            "value":{
              "name":"layoutName",
              "type":"aura://String"
            }
          },
          "prevLayoutName":{
            "serId":87,
            "value":{
              "name":"prevLayoutName",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serId":88,
      "value":{
        "descriptor":"markup://aura:layoutFailed",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    },
    {
      "serRefId":4
    },
    {
      "serId":89,
      "value":{
        "descriptor":"markup://aura:noAccess",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{
          "redirectURL":{
            "serId":90,
            "value":{
              "name":"redirectURL",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serId":91,
      "value":{
        "descriptor":"markup://aura:systemError",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{
          "message":{
            "serId":92,
            "value":{
              "name":"message",
              "type":"aura://String"
            }
          },
          "error":{
            "serId":93,
            "value":{
              "name":"error",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serRefId":83
    },
    {
      "serId":94,
      "value":{
        "descriptor":"markup://aura:valueChange",
        "type":"VALUE",
        "superDef":{
          "serId":95,
          "value":{
            "descriptor":"markup://aura:valueEvent",
            "type":"VALUE",
            "attributes":{

            }
          }
        },
        "attributes":{
          "value":{
            "serId":96,
            "value":{
              "name":"value",
              "type":"aura://Object"
            }
          },
          "index":{
            "serId":97,
            "value":{
              "name":"index",
              "type":"aura://String"
            }
          }
        }
      }
    },
    {
      "serRefId":95
    },
    {
      "serId":98,
      "value":{
        "descriptor":"markup://aura:valueInit",
        "type":"VALUE",
        "superDef":{
          "serRefId":95
        },
        "attributes":{
          "value":{
            "serId":99,
            "value":{
              "name":"value",
              "type":"aura://Object"
            }
          }
        }
      }
    },
    {
      "serId":100,
      "value":{
        "descriptor":"markup://aura:waiting",
        "type":"APPLICATION",
        "superDef":{
          "serRefId":5
        },
        "attributes":{

        }
      }
    }
  ]
}